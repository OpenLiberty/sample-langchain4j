name: Test applications

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'streaming-chat/**'
      - 'tools/**'
      - 'scripts/**'
      - '.github/workflows/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      has_changes: ${{ steps.set-matrix.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changed projects
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            streaming-chat:
              - 'streaming-chat/**'
              - 'scripts/**'
            tools:
              - 'tools/**'
              - 'scripts/**'

      - name: Build test matrix
        id: set-matrix
        run: |
          projects=()
          [ "${{ steps.changes.outputs.streaming-chat }}" = "true" ] && projects+=("streaming-chat")
          [ "${{ steps.changes.outputs.tools }}" = "true" ] && projects+=("tools")

          if [ "${#projects[@]}" -eq 0 ]; then
            echo 'matrix={"include":[]}' >> "$GITHUB_OUTPUT"
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          json='{"include":['
          sep=""
          for p in "${projects[@]}"; do
            json="${json}${sep}{\"project\":\"${p}\"}"
            sep=","
          done
          json="${json}]}"
          echo "matrix=${json}" >> "$GITHUB_OUTPUT"
          echo "has_changes=true" >> "$GITHUB_OUTPUT"
  test-app:
    needs: detect-changes
    if: needs.detect-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'semeru'
          java-version: 21
      - run: unset _JAVA_OPTIONS
      - name: Run tests
        env:
          GITHUB_API_KEY: ${{ secrets.GITHUB_API_KEY }}
        run: |
          cd "${{ matrix.project }}"
          ../scripts/testApp.sh
      - name: Post tests
        if: always()
        run: |
          logsPath=$(find "${{ matrix.project }}" -type f -name "console.log" -print -quit || true)
          [ -n "$logsPath" ] && grep -F "Launching" "$logsPath" || true
      - name: Archive server logs if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs-${{ matrix.project }}
          path: |
            ${{ matrix.project }}/target/liberty/wlp/usr/servers/defaultServer/logs/